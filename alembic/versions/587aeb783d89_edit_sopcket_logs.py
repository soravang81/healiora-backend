"""edit sopcket logs

Revision ID: 587aeb783d89
Revises: c040a977f8b5
Create Date: 2025-09-03 01:30:43.007189

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '587aeb783d89'
down_revision: Union[str, None] = 'c040a977f8b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_patient_assignments_ambulance_assignment_status'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_ambulance_id'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_assignment_date'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_case_status'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_completed_at'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_created_at'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_doctor_assignment_status'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_doctor_id'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_hospital_id'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_id'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_patient_id'), table_name='patient_assignments')
    op.drop_index(op.f('ix_patient_assignments_status'), table_name='patient_assignments')
    op.drop_table('patient_assignments')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patient_assignments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sos_request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ambulance_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hospital_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assignment_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('assignment_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('priority_level', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('emergency_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('symptoms', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('patient_condition', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('assignment_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('doctor_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ambulance_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('doctor_assignment_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ambulance_assignment_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('case_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ambulance_id'], ['ambulances.id'], name=op.f('patient_assignments_ambulance_id_fkey')),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], name=op.f('patient_assignments_doctor_id_fkey')),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.id'], name=op.f('patient_assignments_hospital_id_fkey')),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('patient_assignments_patient_id_fkey')),
    sa.ForeignKeyConstraint(['sos_request_id'], ['socket_logs.id'], name=op.f('patient_assignments_sos_request_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('patient_assignments_pkey'))
    )
    op.create_index(op.f('ix_patient_assignments_status'), 'patient_assignments', ['status'], unique=False)
    op.create_index(op.f('ix_patient_assignments_patient_id'), 'patient_assignments', ['patient_id'], unique=False)
    op.create_index(op.f('ix_patient_assignments_id'), 'patient_assignments', ['id'], unique=False)
    op.create_index(op.f('ix_patient_assignments_hospital_id'), 'patient_assignments', ['hospital_id'], unique=False)
    op.create_index(op.f('ix_patient_assignments_doctor_id'), 'patient_assignments', ['doctor_id'], unique=False)
    op.create_index(op.f('ix_patient_assignments_doctor_assignment_status'), 'patient_assignments', ['doctor_assignment_status'], unique=False)
    op.create_index(op.f('ix_patient_assignments_created_at'), 'patient_assignments', ['created_at'], unique=False)
    op.create_index(op.f('ix_patient_assignments_completed_at'), 'patient_assignments', ['completed_at'], unique=False)
    op.create_index(op.f('ix_patient_assignments_case_status'), 'patient_assignments', ['case_status'], unique=False)
    op.create_index(op.f('ix_patient_assignments_assignment_date'), 'patient_assignments', ['assignment_date'], unique=False)
    op.create_index(op.f('ix_patient_assignments_ambulance_id'), 'patient_assignments', ['ambulance_id'], unique=False)
    op.create_index(op.f('ix_patient_assignments_ambulance_assignment_status'), 'patient_assignments', ['ambulance_assignment_status'], unique=False)
    # ### end Alembic commands ###
